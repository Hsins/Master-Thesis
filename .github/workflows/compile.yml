# Author: Hsins <hsinspeng@gmail.com>
name: LaTeX Compile and Release

on:
  push:
    branches:
      - main

jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Compile LaTeX document
        uses: xu-cheng/latex-action@v2
        with:
          uses: ./
          root_file: main.tex
          compiler: latexmk
          args: '-synctex=1 -interaction=nonstopmode -file-line-error -xelatex -f'

      - name: Delete Last Release
        uses: ame-yu/action-delete-latest-release@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Commit Information
        uses: actions/github-script@0.3.0
        id: author-date
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const commit_details = await github.git.getCommit({owner: context.repo.owner, repo: context.repo.repo, commit_sha: context.sha});
            return commit_details.data.author.date

      - name: Create Release
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.repository }}
          release_name: ${{ steps.author-date.outputs.result }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./main.pdf
          asset_name: main.pdf
          asset_content_type: application/pdf

      - name: Commit files
        run: |
          # Hard-code user configuration
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          # Checkout the branch so we can push back to it
          git checkout main
          git add main.pdf
          # Only commit and push if we have changes
          git diff --quiet && git diff --staged --quiet || (git commit -m ":rocket: Compile .tex files and release .pdf document at $(date +'%Y-%m-%d %H:%M')")
          git push
